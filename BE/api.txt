API 
DOMAIN: …/api

Cấu trúc api
Mỗi api phải trả về:

String? message;
int? code;
dynamic data;
int? status;
String? errMessage;


Chú ý:
Mấy cái liên quan đến picture là lưu list url link đến ảnh
Ảnh thật được lưu vào storage của supabase
Các list string: search_tags, image, 
Product 
1.	Product detail - get

endpoint:
“/products/productId”

res:
{
“product_id”:”String”,
  "description": "string",            // Mô tả sản phẩm
  "discount_price": 9.0,              // Giá sau khi giảm (float)
  "highlights": "",                   // Các điểm nổi bật (string)
  "images": ["string", ""],           // Danh sách URL ảnh (mảng string) - Có up luôn ảnh lên ko ??
  "original_price": 9.0,              // Giá gốc (float)
  "owner": "string",                  // ID hoặc tên người tạo sản phẩm
  "product_type": "string",           // Loại sản phẩm (ví dụ: "electronics", "clothing")
  "rating": 0.0,                      // Điểm đánh giá (float từ 0 đến 5)
  "search_tags": [],                  // Mảng từ khóa tìm kiếm (mảng string)
  "seller": "string",                 // ID người bán
  "title": "string",                  // Tên sản phẩm
  "variant": "string"                 // Biến thể (ví dụ: màu sắc, kích cỡ)
}

2.	Product list - get

“/products”

[
{} - list các product như trên
{}
]


3.	Review - post
“/products/review/productid”

header 
{token: bearer userUid} - mang token là id để định danh người dùng

req
body = {
	“rating”:5,
	“review”:”String”
}

res
body = {
	“success”:true}

4.	Review - get

“/products/review/productid”

req - list review
body = {
[
{
“rating”:5,
	“review”:”String”,
	“review_uid”:”String”, – định danh người gửi - id của user
	“review_name”:”String” – tên người dùng
}
]

5.	Product you like - get
“/users/favourite”

header
{token: bearer userUid} - mang token là id để định danh người dùng

res cũng trả về list các product như trên
[
{}
{}
]

User

1.	Login - post

“user/login”

req
body = {“email”: “String”, “password”: “String”}

res
{ 
“userid”:”string”,
“username”:”String”,
“email”:”String”,
“image”:”String” – Url đến ảnh, ảnh thật được lưu vào supabase storage
}

2.	SignUp - post
“user/signup”

req
body = {“username”:”String”, “email”:”string”, “password”:”String”}

res
body = {“is_success”:”true”}


3.	Cart - get
“/user/cart”

header - tương tự 

res - trả về list sản phẩm
body = 
[
{
“product_id”:”String”,
“quantity”:3,
“product”:{
	"images": “String”, // ảnh đầu trong list
	"discount_price": 9.0,
	"title": "string",
}
}
]

4.	Cart - post - thêm sản phẩm vào giỏ hàng
“/user/cart”

header - tương tự

req:
body = {
	“product_id”:”String”,
	“quantity”:2
	}

res: 
body = {
	“success”: true
}

5.	Cart - delete - xóa sản phẩm
“/user/cart/productid”

res: trả về list sản phẩm tương tự cart get

6.	Picture, name, number, password

Endpoint: PATCH /user

Mô tả: Cập nhật thông tin cá nhân của người dùng như ảnh đại diện, tên, số điện thoại hoặc mật khẩu.

Phương thức: PATCH

Yêu cầu xác thực: Có (cần token đăng nhập hợp lệ)

{
  "picture": "https://example.com/avatar.jpg",
  "name": "Nguyễn Văn A",
  "number": "0987654321",
  "password": "new_secure_password"
}

res 
{
  "success": true,
  "user": {
    "id": “”,
    "picture": "https://example.com/avatar.jpg",
    "name": "Nguyễn Văn A",
    "number": "0987654321"
  }
}

thất bại
{
  "success": false,
  "error": "INVALID_PASSWORD"
}


7.	Address - thêm sửa xóa

{
  "name": "Nguyễn Văn A",
  "phone": "0912345678",
  "street": "123 Nguyễn Trãi",
  "city": "Hà Nội",
  "district": "Hà Nội",
  "is_default": true
}

8.	Ordered product - thêm

“order_date”: “String”
“product_uid”: “String”
